---
import { Image } from "astro:assets";

import Base from "@/layouts/Base.astro";
import Tag from "@/components/general/Tag.astro";
import ListOfContent from "@/components/books/ListOfContent.tsx"

import { getNestedHeadings } from "@/utils/getNestedHeadings";

import { getCollection, type CollectionEntry } from "astro:content";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";

export const getStaticPaths = (async () => {
  const books: CollectionEntry<"books">[] = await getCollection("books");

  return books.map((entry) => ({
    params: { book: entry.slug },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry } = Astro.props as Props; 
const { Content, headings } = await entry.render();

const nestedHeadings = getNestedHeadings(headings);
---

<Base postData={entry}>
  <article dir="ltr" class="font-pacamara-space px-7 pt-10 mx-auto w-full">
    <div class="flex-col-reverse flex md:flex-row items-start justify-start md:px-16">
      <Image
        src={entry.data.image}
        width="600"
        height="800"
        alt=""
        loading="eager"
        decoding="sync"
        class="block relative object-top object-contain h-72 md:h-[600px] image-shine rounded-[15px]"
        loading="eager"
      />
      <div
        class="prose mt-4 lg:prose-xl prose-headings:font-bold prose-headings:text-pacamara-dark prose-headings:mb-3"
      >
        <h1 class="transition-all capitalize duration-300 dark:text-white">
          {entry.data.name}
        </h1>
        <p class="text-pacamara-white/50">
          {entry.data.description}
        </p>
        <p
          class="flex flex-row flex-wrap gap-5 items-center font-pacamara-space mx-auto max-w-screen-lg mb-7"
        >
          {entry.data.tags.split(",").map((tag:string) => <Tag tag={tag.trim()} />)}
        </p>
      </div>
    </div>

    <div
      class="lg:px-0 pt-10 mb-5 mx-auto prose lg:prose-xl prose-headings:transition-all prose-headings:duration-300 prose-headings:font-pacamara-space prose-headings:font-bold prose-headings:text-pacamara-accent prose-headings:mb-0 prose-headings:pb-3 prose-headings:mt-6 prose-p:transition-all prose-p:duration-300 prose-p:text-pacamara-primary/80 prose-li:transition-all prose-li:duration-300 prose-li:text-pacamara-primary/80 prose-td:transition-all prose-td:duration-300 prose-td:text-pacamara-primary/80 prose-a:underline prose-a:font-semibold prose-a:transition-all prose-a:duration-300 prose-a:text-pacamara-accent hover:prose-a:text-pacamara-dark prose-strong:transition-all prose-strong:duration-300 prose-strong:font-bold prose-hr:transition-all prose-hr:duration-300 prose-hr:border-pacamara-secondary/40 prose-img:rounded-lg prose-img:mx-auto prose-code:transition-all prose-code:duration-300 prose-code:text-pacamara-dark dark:prose-headings:text-pacamara-accent dark:prose-p:text-white/70 dark:prose-a:text-white dark:hover:prose-a:text-pacamara-accent dark:prose-strong:text-white dark:prose-li:text-white dark:prose-code:text-white dark:prose-td:text-white/70 dark:prose-hr:border-pacamara-accent/30 dark:prose-tr:border-pacamara-accent/30 dark:prose-thead:border-pacamara-accent/30"
    >
      <ListOfContent {nestedHeadings} client:load/>
      <Content />
    </div>
  </article>
</Base>
