---
import config from '@/config.mjs';

const { postData } = Astro.props;

const title = ( postData?.data?.title ? postData.data.title : config.title ) + config.titleSuffix;
const description = postData?.data?.description ? postData.data.description : config.description;
const permalink = new URL(Astro.url.pathname, Astro.url);
const image = postData?.data?.image ? postData.data.image.src : config.defaultOgImage;
const type = postData?.data?.type ? postData.data.type : "website";

---

<title>{title}</title>
<meta name="title" content={title} />
{description && <meta name="description" content={description} />}

<!-- Open Graph Tags (Facebook) -->
<meta property="og:type" content={type} />
<meta property="og:title" content={title} />
{permalink && <meta property="og:url" content={permalink} />}
{description && <meta property="og:description" content={description} />}
<!-- {image && <meta property="og:image" content={new URL(image, Astro.url)} />} -->
<meta property="og:image" content="https://opengraph.b-cdn.net/production/images/4f122a11-5e60-475c-83aa-191e3dee0ee1.png?token=oSRrgTvMzcbdF-iHk1ZfC3SysWhnFdQetSfa1LUBfqs&height=517&width=1200&expires=33261759491">


<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:title" content={title} />
{permalink && <meta property="twitter:url" content={permalink} />}
{description && <meta property="twitter:description" content={description} />}
{image && <meta property="twitter:image" content={image} />}